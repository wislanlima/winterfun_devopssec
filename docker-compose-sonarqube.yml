version: "3"
services:
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - winterfun_network

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER_SONAR}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_SONAR}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - winterfun_network

  filebeat:
    container_name: filebeat
    restart: always
    user: root
    build:
      context: ./_dockerfiles/filebeat
    volumes:
      - ./_dockerfiles/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - KIBANA_HOST=${KIBANA_HOST}
      - ELASTIC_INDEX=filebeat-sonarqube-server
    command: [ "--strict.perms=false" ]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
    networks:
      - winterfun_network

  telegraf:
    # later versions of telegraf cannot be run as root.
    # see: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
    container_name: telegraf
    user: root
    restart: always
    build:
      context: ./_dockerfiles/telegraf
    environment:
      - HOSTNAME= telegraf-sonarqube
      - DOCKER_INFLUXDB_INIT_BUCKET=TELEGRAF-SONAR
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - INFLUXDB_HOST=${INFLUXDB_HOST}
    volumes:
      # Mount for telegraf configuration
      - ./_dockerfiles/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - winterfun_network

networks:
    winterfun_network:
        driver: bridge

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: