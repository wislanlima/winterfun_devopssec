version: "3.8"
services:
  server:
    container_name: api
    build: ./_dockerfiles/backend
    image: wislan/docker_winterfun:winterfun_backend
    ports:
      - "80:5000"
    environment:
      DATABASE: postgres
      HOST_ADDRESS: postgres:5432
      DB_USER: DEVSECOPS
      DB_PASSWORD: PGDCLOUD
      STATSD_HOST: 44.199.254.34
      TYPE: dev
    depends_on:
      - db
    entrypoint: /code/entrypoint.sh
    networks:
      - winterfun_network

  db:
    container_name: postgres
    build:
      context: ./_dockerfiles/postgres
    image: wislan/docker_winterfun:winterfun_postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: DEVSECOPS
      POSTGRES_PASSWORD: PGDCLOUD
      POSTGRES_HOSTNAME: localhost:5432
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - winterfun_network

  influxdb:
    image: wislan/docker_winterfun:winterfun_influxdb
    container_name: influxdb
    restart: always
    build:
      context: ./_dockerfiles/influxdb
    environment:
      - INFLUXDB_ADMIN_USER_PASSWORD=pdgcloud_devopssec_pwd
      - INFLUXDB_ADMIN_USER_TOKEN=winterfun_token
    volumes:
      - influxdb:/bitnami/influxdb
    networks:
      - winterfun_network

  telegraf:
    # later versions of telegraf cannot be run as root.
    # see: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
    user: root
    restart: always
    container_name: telegraf
    build:
      context: ./_dockerfiles/telegraf
    image: wislan/docker_winterfun:winterfun_telegraf
    environment:
      - HOSTNAME=pgdcloud-devopssec-telegraf
      - DOCKER_INFLUXDB_INIT_BUCKET=WINTERFUN_WEBAPP
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=winterfun_token
      - DOCKER_INFLUXDB_INIT_ORG=WINTERFUN_2022
      - INFLUXDB_HOST=44.199.254.34
    volumes:
      # Mount for telegraf configuration
      - ./_dockerfiles/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - winterfun_network

  filebeat:
    restart: always
    user: root
    container_name: filebeat
    build:
      context: ./_dockerfiles/filebeat
    image: wislan/docker_winterfun:winterfun_filebeat
    volumes:
      - ./_dockerfiles/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELASTICSEARCH_HOST=44.199.254.34
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - KIBANA_HOST=44.199.254.34
      - ELASTIC_INDEX=winterfun-filebeat-main-server
    command: [ "--strict.perms=false" ]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
    networks:
      - winterfun_network

  redis:
    container_name: redis
    build:
      context: ./_dockerfiles/redis
    image: wislan/docker_winterfun:winterfun_redis
    expose:
      - "6379"
    ports:
      - "6379:6379"
    networks:
      - winterfun_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - db
    ports:
      - "5051:80"
    networks:
      - winterfun_network

  api_django:
    container_name: api_django
    build:
      context: .
      dockerfile: ./_dockerfiles/local/django/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "443"
    ports:
      - 443:443
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - winterfun_network

networks:
    winterfun_network:
        driver: bridge
volumes:
    postgres_db_volume:
        driver: local
    static_volume:
    media_volume:
    influxdb:
        driver: local