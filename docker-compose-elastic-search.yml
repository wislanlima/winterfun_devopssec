version: '3.2'

services:
  elasticsearch:
    restart: always
    build:
      context: ./_dockerfiles/elasticsearch
      args:
        ELK_VERSION: 7.16.3
    volumes:
      - ./_dockerfiles/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  kibana:
    restart: always
    build:
      context: ./_dockerfiles/kibana
      args:
        ELK_VERSION: 7.16.3
    volumes:
      - ./_dockerfiles/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    restart: always
    user: root
    build:
      context: ./_dockerfiles/filebeat
    volumes:
      - ./_dockerfiles/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - KIBANA_HOST=${KIBANA_HOST}
      - ELASTIC_INDEX=filebeat-elastic-server
    command: [ "--strict.perms=false" ]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
    networks:
      - elk

  telegraf:
    # later versions of telegraf cannot be run as root.
    # see: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
    container_name: telegraf
    user: root
    restart: always
    build:
      context: ./_dockerfiles/telegraf
    environment:
      - HOSTNAME= telegraf-elk
      - DOCKER_INFLUXDB_INIT_BUCKET=TELEGRAF-ELK
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - INFLUXDB_HOST=${INFLUXDB_HOST}
    volumes:
      # Mount for telegraf configuration
      - ./_dockerfiles/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch: