name: "Create Infra: Winter Fun"

on:
  workflow_dispatch
#  push:
#    branches:
#      - main
#  pull_request:

jobs:
  terraform:
    name: "Creating Infrastructure"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '_terraform'
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -diff

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        env:
          TF_VAR_pvt_key: ${{ secrets.AWS_PVT_KEY }}
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
           
      - name: Retrieve DEV_IP
        id: ip_outputs
        run: |
            terraform output -raw winterfun_dev >> dev.txt
            echo "::set-output name=dev::$(<dev.txt)"
            terraform output -raw winterfun_stage >> stage.txt
            echo "::set-output name=stage::$(<stage.txt)"
            terraform output -raw winterfun_prod >> prod.txt
            echo "::set-output name=prod::$(<prod.txt)"
          
      - name: SHOW IPS
        run: |
           echo "DEV: $(<dev.txt)"
           echo "STAGE: $(<stage.txt)"
           echo "PROD: $(<prod.txt)"
      
      - name: Save STAGE_IP
        uses: gliech/create-github-secret-action@v1
        with:
            name: WINTERFUN_STAGE_IP
            value: ${{ steps.ip_outputs.outputs.stage }}
            pa_token: ${{ secrets.GIT_HUB_TOKEN }}
        
      - name: Save DEV_IP
        uses: gliech/create-github-secret-action@v1
        with:
            name: WINTERFUN_DEV_IP
            value: ${{ steps.ip_outputs.outputs.dev }}
            pa_token: ${{ secrets.GIT_HUB_TOKEN }}
            
      - name: Save  PROD_IP
        uses: gliech/create-github-secret-action@v1
        with:
            name: WINTERFUN_PROD_IP
            value: ${{ steps.ip_outputs.outputs.prod }}
            pa_token: ${{ secrets.GIT_HUB_TOKEN }}
