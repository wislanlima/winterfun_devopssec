name: "3 Deploy DEV/STAGE/PROD: Winter Fun"

on:
  workflow_dispatch:
  # push:
  #  branches: [ master ]
    inputs:
      environment_:
        type: string
        required: true
        description: Environment [DEV/STAGE/PROD]

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Deploying in AWS EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PVT_KEY  }}
            USER_NAME : ubuntu

        run: |
          if [ ${{ github.event.inputs.environment_ }} == 'PROD' ]; then
            HOSTNAME=${{ secrets.WINTERFUN_PROD_IP  }}
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            rsync -auvz -e "ssh -o StrictHostKeyChecking=no -i private_key" --exclude='*/.git/*' -r "$(pwd)/" ${USER_NAME}@${HOSTNAME}:/home/${USER_NAME}/winterfun
            ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            cd '/home/$USER_NAME/winterfun'
            rm private_key
            docker login --username ${{ secrets.DOCKER_UN }} --password ${{ secrets.DOCKER_PWD }}
            docker-compose -f docker-compose-dev.yml up -d --build
          elif [ ${{ github.event.inputs.environment_ }} == 'STAGE' ]; then
            HOSTNAME=${{ secrets.WINTERFUN_STAGE_IP  }}
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            rsync -auvz -e "ssh -o StrictHostKeyChecking=no -i private_key" --exclude='*/.git/*' -r "$(pwd)/" ${USER_NAME}@${HOSTNAME}:/home/${USER_NAME}/winterfun
            ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            cd '/home/$USER_NAME/winterfun'
            rm private_key
            docker login --username ${{ secrets.DOCKER_UN }} --password ${{ secrets.DOCKER_PWD }}
            docker-compose -f docker-compose-dev.yml up -d --build
          else
            HOSTNAME=${{ secrets.WINTERFUN_DEV_IP  }}
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            rsync -auvz -e "ssh -o StrictHostKeyChecking=no -i private_key" --exclude='*/.git/*' -r "$(pwd)/" ${USER_NAME}@${HOSTNAME}:/home/${USER_NAME}/winterfun
            ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            cd '/home/$USER_NAME/winterfun'
            rm private_key
            docker login --username ${{ secrets.DOCKER_UN }} --password ${{ secrets.DOCKER_PWD }}
            docker-compose -f docker-compose-dev.yml up -d --build
          fi
          "

  Smoke-Test:
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
      - run: echo 'Smoke Tests not yet implemented.'
#      - name: Coverage report artifacts
#      - uses: actions/upload-artifact@v1
#        with:
#          name: coverage report
#          path: output/coverage_report.txt
#      - name: Coverage report artifacts if failed
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: coverage report if failed
#          path: output/coverage_report.txt
#      - name: Security check report artifacts
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: bandit
#          path: output/security_report.txt


  Functional-Test:
    runs-on: ubuntu-latest
    needs: Smoke-Test
    steps:
      - run: echo 'Functional Tests not yet implemented.'
